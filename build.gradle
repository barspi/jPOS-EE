plugins {
    id 'org.jpos.jposapp' version '0.0.13'
    id 'idea'
    id 'org.gradlex.extra-java-module-info' version '1.9'
    id 'org.owasp.dependencycheck' version '12.1.3'
}

import org.gradle.internal.os.OperatingSystem

evaluate(new File("${project.projectDir}/VERSION"))

allprojects {
    apply plugin: 'idea'
    apply plugin: 'eclipse'
}

subprojects {
    group = 'org.jpos.ee'
    version = binding.variables.get("PROJECT_VERSION") ?: "0.0.1"
    def isSnapshot = version.contains("SNAPSHOT")
    def mavenCentralRepo = isSnapshot ?
        'https://oss.sonatype.org/content/repositories/snapshots/' :
        'https://oss.sonatype.org/service/local/staging/deploy/maven2';
    if (name != 'bom') {
        apply plugin: 'maven-publish'
        apply plugin: 'signing'
        apply plugin: 'project-report'
        apply plugin: 'org.jpos.jposapp'
        apply plugin: 'java-library'

        [ compileJava, compileTestJava, javadoc ]*.options*.encoding = 'UTF-8'
        configurations.implementation.transitive = true

        java {
            withJavadocJar()
            withSourcesJar()
            sourceCompatibility = JavaVersion.VERSION_23
            targetCompatibility = JavaVersion.VERSION_23
        }

        tasks.withType(JavaCompile) {
            options.release = JavaVersion.VERSION_23.ordinal()
        }
        repositories {
            mavenCentral()
            maven { url = uri('https://jpos.org/maven') }
            mavenLocal()
        }
        if (project.hasProperty("lint")) {
            // gradle -Plint ...
            tasks.withType(JavaCompile) {
                options.compilerArgs << "-Xlint:preview" << "-Xlint:unchecked" << "-Xlint:deprecation"
            } 
        }
        publishing {
            publications {
                mavenJava(MavenPublication) {
                    pom {
                        name = 'jPOS Project'
                        description = """
        jPOS is an ISO-8583 based financial transaction 
        library/framework that can be customized and 
        extended in order to implement financial interchanges.
        """
                        url = "https://jpos.org"
                        organization {
                            name = 'jPOS.org'
                            url = 'https://jpos.org'
                        }
                        issueManagement {
                            system = 'Github Issues'
                            url = 'https://github.com/jpos/jPOS-EE/issues'
                        }
                        scm {
                            url = "http://github.com/jpos/jPOS-EE"
                            connection = "scm:git:https://github.com/jpos/jPOS-EE.git"
                            developerConnection = "scm:git:git@github.com:jpos/jPOS-EE.git"
                        }
                        licenses {
                            license {
                                name = 'GNU AFFERO GENERAL PUBLIC LICENSE'
                                url = 'http://www.gnu.org/licenses/agpl-v3.html'
                                comments = 'See http://jpos.org/license for more details.'
                                distribution = 'repo'
                            }
                        }
                        developers {
                            developer {
                                id = 'jpos-team'
                                name = 'jPOS Development Team'
                                email = 'info@jpos.org'
                            }
                        }
                    }
                    groupId = 'org.jpos.ee'
                    artifactId="jposee-${project.name}"
                    from components.java
                }
            }
            repositories {
                maven {
                    def snapshotsRepoUrl = 'file:///opt/local/maven'
                    // def releasesRepoUrl = mavenCentralRepo
                    def releasesRepoUrl = snapshotsRepoUrl
                    url = isSnapshot ? snapshotsRepoUrl : releasesRepoUrl
                    if (!isSnapshot) {
                        credentials {
                            if (project.hasProperty("mavenCentralUsername"))
                                username = mavenCentralUsername
                            if (project.hasProperty("mavenCentralPassword"))
                                password = mavenCentralPassword
                        }
                    }
                }
            }
        }
        signing {
            required = !isSnapshot 
            sign publishing.publications.mavenJava
        }
        javadoc {
            failOnError = false
            options.addStringOption('Xdoclint:all,-missing', '-quiet')
            configure(options) {
                windowTitle = "jPOS-EE ${project.version}"
                header = "<b>jPOS-EE ${project.version}</b>"
                linkSource = true
                links(
                    'https://docs.oracle.com/en/java/javase/23/docs/api'
                )
                tags(
                    'apiNote:a:API Note:',
                    'implSpec:a:Implementation Requirements:',
                    'implNote:a:Implementation Note:'
                )
            }
        }

        test {
            useJUnitPlatform()
            testLogging {
                events "passed", "skipped", "failed"
            }
            systemProperty 'user.language', 'en'
            if (!(System.getenv("GITHUB_ACTIONS") != null && System.getenv("GITHUB_ACTIONS") == "true" &&
                    (OperatingSystem.current().isMacOsX() || OperatingSystem.current().isWindows()))) {
                maxParallelForks = Runtime.runtime.availableProcessors()
            }
        }
        task aggregatedJavadoc (type: Javadoc, description: "Aggregated Javadocs") {
            source subprojects.collect {project ->
                project.sourceSets.main.allJava
            }
            destinationDir = new File(buildDir, 'docs/javadoc')
            classpath = files(subprojects.collect {project ->
                project.sourceSets.main.compileClasspath})
            failOnError = false
        }
        repositories {
            maven {
                def snapshotsRepoUrl = 'file:///opt/local/maven'
                // def releasesRepoUrl = mavenCentralRepo
                def releasesRepoUrl = snapshotsRepoUrl
                url = isSnapshot ? snapshotsRepoUrl : releasesRepoUrl
                if (!isSnapshot) {
                    credentials {
                        if (project.hasProperty("mavenCentralUsername"))
                            username = mavenCentralUsername
                        if (project.hasProperty("mavenCentralPassword"))
                            password = mavenCentralPassword
                    }
                }
            }
        }
    }
    if (project.path.startsWith(':modules:iso20022-')) {
        dependencies {
            implementation libs.xmlBind
        }
    }
}

// Configure IDEA to use Git
idea {
    project {
        ipr {
            withXml { 
                provider -> provider.node.component.find { 
                    it.@name == 'VcsDirectoryMappings' 
                }.mapping.@vcs = 'Git' 
            }
        }
        languageLevel = '23'
    }
}

